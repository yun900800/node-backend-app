name: Deploy Node.js Project to Serv00

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 拉取代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ 安装 Node.js 并安装依赖 + 生成 Prisma WASM 客户端
      - name: Setup Node.js and generate Prisma WASM client
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - run: |
          echo "-> 安装依赖..."
          npm ci --omit=dev

          echo "-> 清理旧的 Prisma Client..."
          rm -rf shared/generated/prisma-client

          echo "-> 生成 Prisma WASM Client..."
          npx prisma generate --schema=prisma/schema.prisma

          echo "-> 确保 Prisma 文件可读..."
          chmod -R u+rwX shared/generated/prisma-client node_modules/@prisma/client

          echo "-> Prisma Client 生成完成."
        env:
          POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}

      # 3️⃣ 设置 SSH Agent
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      # 4️⃣ 同步文件到 FreeBSD
      - name: Deploy Code & Sync
        run: |
          REMOTE_DIR="/home/${{ secrets.DEPLOY_USER }}/app/node-backend-api/"
          HOST=${{ secrets.DEPLOY_HOST }}
          USER=${{ secrets.DEPLOY_USER }}
          SSH_OPTIONS="-o StrictHostKeyChecking=no -p 22"

          echo "-> 创建远程目录（如果不存在）..."
          ssh ${SSH_OPTIONS} ${USER}@${HOST} "mkdir -p ${REMOTE_DIR}"

          echo "-> 使用 rsync 同步项目..."
          rsync -rltDLvz --chmod=ugo=rwX --delete -v --progress -e "ssh ${SSH_OPTIONS}" \
            ./shared/generated/prisma-client ./node_modules/@prisma/client ./ \
            ${USER}@${HOST}:${REMOTE_DIR}

          echo "-> 文件同步完成."

      # 5️⃣ 重启 Node.js 服务
      - name: Restart Node.js Service on FreeBSD
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          port: 22
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          envs: POSTGRES_PRISMA_URL,POSTGRES_URL_NON_POOLING,JWT_SECRET
          script: |
            PROJECT_DIR="/home/${{ secrets.DEPLOY_USER }}/app/node-backend-api"
            MAIN_FILE="server.js"
            APP_NAME="node-backend-api"
            LOG_FILE="/tmp/${APP_NAME}.log"

            echo "-> 进入项目目录..."
            cd ${PROJECT_DIR}

            echo "-> 杀死旧进程..."
            PID=$(ps aux | grep node | grep ${APP_NAME} | grep -v grep | awk '{print $2}')
            if [ -n "${PID}" ]; then
              kill -15 ${PID} || true
              sleep 5
              ps -p ${PID} && kill -9 ${PID} || echo "旧进程已终止."
            fi

            echo "-> 启动新的 Node.js 服务 (使用 Prisma WASM)..."
            export POSTGRES_PRISMA_URL=$POSTGRES_PRISMA_URL
            export POSTGRES_URL_NON_POOLING=$POSTGRES_URL_NON_POOLING
            export JWT_SECRET=$JWT_SECRET

            nohup node ${MAIN_FILE} > ${LOG_FILE} 2>&1 &

            echo "-> Node.js 服务已启动. 日志: ${LOG_FILE}"
