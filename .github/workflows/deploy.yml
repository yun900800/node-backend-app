name: Deploy Node.js Project to Serv00

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 拉取代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ 设置 SSH Agent
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      # 3️⃣ 同步源代码（不包含 node_modules）
      - name: Sync code to FreeBSD
        run: |
          REMOTE_DIR="/home/${{ secrets.DEPLOY_USER }}/app/node-backend-api/"
          HOST=${{ secrets.DEPLOY_HOST }}
          USER=${{ secrets.DEPLOY_USER }}
          SSH_OPTIONS="-o StrictHostKeyChecking=no -p 22"

          echo "-> 创建远程目录..."
          ssh ${SSH_OPTIONS} ${USER}@${HOST} "mkdir -p ${REMOTE_DIR}"

          echo "-> 同步项目文件（不包含 node_modules）..."
          rsync -rltDLvz --delete -v --progress -e "ssh ${SSH_OPTIONS}" \
            package.json package-lock.json server.js prisma features src config middleware shared \
            ${USER}@${HOST}:${REMOTE_DIR}

      # 4️⃣ 在 FreeBSD 上安装依赖 + 生成 Prisma + 启动 Node.js
      - name: Install & Deploy on FreeBSD
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          port: 22
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          envs: POSTGRES_PRISMA_URL,POSTGRES_URL_NON_POOLING,JWT_SECRET
          script: |
            PROJECT_DIR="/home/${{ secrets.DEPLOY_USER }}/app/node-backend-api"
            LOG_FILE="/tmp/node-backend-api.log"
            MAIN_FILE="server.js"
            APP_NAME="node-backend-api"

            echo "-> 进入项目目录..."
            cd ${PROJECT_DIR}

            echo "-> 安装生产依赖..."
            npm install --production

            echo "-> 生成 Prisma WASM Client..."
            npx prisma generate --schema=prisma/schema.prisma

            echo "-> 杀死旧进程..."
            PID=$(ps aux | grep node | grep ${APP_NAME} | grep -v grep | awk '{print $2}')
            if [ -n "${PID}" ]; then
              kill -15 ${PID} || true
              sleep 5
              ps -p ${PID} && kill -9 ${PID} || echo "旧进程已终止."
            fi

            echo "-> 启动 Node.js 服务..."
            export POSTGRES_PRISMA_URL=$POSTGRES_PRISMA_URL
            export POSTGRES_URL_NON_POOLING=$POSTGRES_URL_NON_POOLING
            export JWT_SECRET=$JWT_SECRET

            nohup node ${MAIN_FILE} > ${LOG_FILE} 2>&1 &

            echo "-> Node.js 服务已启动. 日志: ${LOG_FILE}"
